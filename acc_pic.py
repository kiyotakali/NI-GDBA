import matplotlib.pyplot as plt
import numpy as np

# 假设我们有五组数据
data1 = [0.5, 0.5, 0.5609756097560976, 0.5060975609756098, 0.524390243902439, 0.6097560975609756, 0.6402439024390244, 0.6402439024390244, 0.6890243902439024, 0.75, 0.725609756097561, 0.5426829268292683, 0.6036585365853658, 0.7317073170731707, 0.6158536585365854, 0.676829268292683, 0.6524390243902439, 0.7439024390243902, 0.7134146341463414, 0.7134146341463414, 0.7439024390243902, 0.6951219512195121, 0.7560975609756098, 0.7439024390243902, 0.5914634146341463, 0.6524390243902439, 0.7134146341463414, 0.7378048780487805, 0.7134146341463414, 0.7682926829268293, 0.774390243902439, 0.75, 0.7134146341463414, 0.7195121951219512, 0.6524390243902439, 0.7560975609756098, 0.7317073170731707, 0.7134146341463414, 0.7439024390243902, 0.7621951219512195]

data2 = [0.2375, 0.35, 0.3875, 0.475, 0.575, 0.6875, 0.8, 0.925, 0.975, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.975, 0.9875]

data3 = [0.225, 0.2875, 0.3875, 0.4125, 0.5, 0.7, 0.85, 0.9375, 0.9625, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.975, 0.9625, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875]

data4 = [0.2375, 0.35, 0.3875, 0.45, 0.4875, 0.675, 0.7625, 0.925, 0.975, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.975, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875]

data5 = [0.275, 0.3625, 0.4125, 0.475, 0.525, 0.675, 0.7625, 0.8875, 0.9625, 0.975, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875, 0.9875]

# 创建横轴（epoch）
epochs = range(len(data1))

# # 创建图形和坐标轴
# plt.figure(figsize=(12, 6))

# # 绘制五条线
# plt.plot(epochs, data1, label='NI-DGBA')
# plt.plot(epochs, data2, label='random')
# plt.plot(epochs, data3, label='ws')
# plt.plot(epochs, data4, label='ba')
# plt.plot(epochs, data5, label='rr')

# # 设置图表标题和轴标签
# plt.title('Global Test Accuracy over Epochs')
# plt.xlabel('Epoch')
# plt.ylabel('Test Accuracy')

# # 添加图例
# plt.legend()

# # 添加网格
# plt.grid(True, linestyle='--', alpha=0.7)

# # 设置y轴的范围
# plt.ylim(0.4, 1.0)

# # 显示图表
# plt.tight_layout()

# # 保存图表到 "pic" 文件夹
# plt.savefig('/home/lzm/BkdFedGCN/pic/acc/NC1_GAT.png', dpi=300, bbox_inches='tight')

# print("图表已保存")

plt.subplot(2, 1, 2)

# 选择特定的epoch（例如，最后一个epoch）
specific_epoch = -1  # 最后一个epoch

# 获取特定epoch的数据
specific_data = [data1[specific_epoch], data2[specific_epoch], data3[specific_epoch], data4[specific_epoch], data5[specific_epoch]]

# 创建柱状图
bars = plt.bar(range(1, 6), specific_data)

# 设置柱状图的标题和标签
plt.title(f'Global Test Accuracy')
plt.xlabel('NCI1')
plt.ylabel('Test Accuracy')

# 设置x轴刻度
plt.xticks(range(1, 6), ['NI-DGBA', 'random', 'ws', 'ba', 'rr'])

# 在每个柱子上方显示具体数值
for bar in bars:
    height = bar.get_height()
    plt.text(bar.get_x() + bar.get_width()/2., height,
             f'{height:.4f}',
             ha='center', va='bottom')

# 设置y轴的范围
plt.ylim(0.5, 0.9)

# 调整子图之间的间距
plt.tight_layout()

# 保存图表到 "pic" 文件夹
plt.savefig('/home/lzm/BkdFedGCN/pic/acc/NCI1_GCN_zhu.png', dpi=300, bbox_inches='tight')

print("图表已保存")
